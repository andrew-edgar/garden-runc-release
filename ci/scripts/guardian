#!/usr/bin/env bash
set -ex

grr_base=$PWD/gr-release-develop

# shellcheck source=../helpers/device-control
source "$grr_base/ci/helpers/device-control"

# shellcheck source=../../src/build/runc.bash
source "$grr_base/src/build/runc.bash"
# shellcheck source=../../src/build/grootfs.bash
source "$grr_base/src/build/grootfs.bash"

export GOROOT=/usr/local/go
export PATH=$GOROOT/bin:$PATH

export GOPATH="${grr_base}/src/gopath"
export PATH=$HOME/go/bin:$GOPATH/bin:$PATH

if [ -n "${PATCH_RUNC:-}" ]; then
  (
  # Using patch instead of `git apply` to keep this path working with `fly
  # execute`, which does not preserve the `.git` dir.
  cd "${grr_base}/src/gopath/src/github.com/opencontainers/runc"
  patch < "${grr_base}/ci/runc-patches/0001-remove-delete-timeout.patch"
  )
fi

mkdir -p "${GOPATH}/bin"
build_runc "$grr_base" "${GOPATH}/bin"
build_grootfs "$grr_base" "${GOPATH}/bin"

if [[ "$CONTAINERD_ENABLED" == "true" ]] ; then
  #TODO: Figure out how to get rid of the containerd git-related errors below
  echo -e "=========================================\n\n\n\nDuring containerd compilation you will get git fatals that complain of containerd directory not being a git repository. You can safely ignore them :)\n\n\n\n========================================="
  pushd "$grr_base"/src/gopath/src/github.com/containerd/containerd
    BUILDTAGS=no_btrfs make && make install
  popd
fi

# Set up AppArmor
if ! grep securityfs /proc/self/mounts > /dev/null 2>&1 ; then
  mount -t securityfs securityfs /sys/kernel/security
fi
apparmor_parser -r /opt/static-assets/garden-default

export GARDEN_TEST_ROOTFS=/opt/warden/rootfs.tar
export GARDEN_FUSE_TEST_ROOTFS=/opt/warden/fuse-rootfs.tar
export GARDEN_TAR_PATH=/opt/static-assets/tar/bin/tar
export GARDEN_TEST_GRAPHPATH=/tmp/aufs_mount
export GARDEN_DOCKER_REGISTRY_V2_TEST_ROOTFS=/opt/warden/docker-registry-v2-rootfs.tar

permit_device_control
create_loop_devices 256

go version

echo "compiling test process: $(date)"

cd "$grr_base"/src/guardian

if [ -z "${NO_GO_VET:-}" ]; then
  go vet -mod vendor ./...
fi

go get github.com/onsi/ginkgo/ginkgo@049d8501c2adbe69f641bb838202a4b278e6c6d2
go mod vendor
ginkgo version

cmd="ginkgo --mod vendor -tags daemon -p --keep-going --nodes=${GINKGO_NODES:-8} --fail-on-pending --randomize-suites --randomize-all cmd/dadoo"
if [ -n "${RACE_DETECTION:-}" ]; then
  cmd="$cmd --race"
fi

cmd="$cmd $*"

if [ -n "${SLOW_MOBIUS_TIME_LIMIT_SECONDS:-}" ]; then
  cmd="$grr_base/ci/helpers/slowmobius $cmd"
fi

$cmd
